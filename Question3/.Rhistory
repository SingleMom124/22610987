y = "Percentage") +
theme_minimal() +
geom_text(aes(label = sprintf("%.1f%%", Percentage)),
vjust = -0.5,
size = 3,
color = "black")+
theme(panel.border = element_rect(color = "black", fill = NA, size = 1))
View(actions)
most <- data %>%
arrange(Allocations_GDP_Percent) %>%
head()
View(most)
most <- data %>%
arrange(desc(Allocations_GDP_Percent)) %>%
head()
View(most)
rm(list = ls())
gc()
library(tidyverse)
library(readr)
list.files('code/', full.names = T, recursive = T) %>% .[grepl('.R', .)] %>% as.list() %>% walk(~source(.))
alloc <- read_csv("data/Financial Allocations.csv")
commit <- read_csv("data/Financial Commitments.csv")
plot <- ggplot(data, aes(x = Country,
y = Allocations_GDP_Percent)) +
geom_bar(stat = "identity",
fill = "navy") +
labs(title = "Total Allocations as a Proportion of GDP",
x = "Country",
y = "Percentage of GDP") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1)) +
theme(panel.border = element_rect(color = "black", fill = NA, size = 1))
# Just a small bit of wrangling...
# ... by joining the data sets by "country" and "EU member" columns so that I only have to work with one data set...
data <- inner_join(alloc, commit, by = c("Country", "EU member"))
# ... and then filtering out countries who are not EU Members
data <- data %>%
filter(`EU member` == 1) %>%
mutate(Allocations_GDP_Percent = (`Total bilateral allocations($ billion)` / `GDP in 2021($ billion)`) * 100) %>%
mutate(Commitments_GDP_Percent = (`Total bilateral commitments($ billion)` / `GDP in 2021($ billion)`) * 100)
plot <- ggplot(data, aes(x = Country,
y = Allocations_GDP_Percent)) +
geom_bar(stat = "identity",
fill = "navy") +
labs(title = "Total Allocations as a Proportion of GDP",
x = "Country",
y = "Percentage of GDP") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1)) +
theme(panel.border = element_rect(color = "black", fill = NA, size = 1))
plot
# Filtering out Estonia and Malta...
data <- data %>%
filter(!Country %in% c("Estonia", "Malta"))
# Now plotting it using my double_bar_plotter function...
compare_plot <- double_bar_plotter(data)
compare_plot
# Just a small bit of wrangling...
# ... by joining the data sets by "country" and "EU member" columns so that I only have to work with one data set...
data <- inner_join(alloc, commit, by = c("Country", "EU member"))
# ... and then filtering out countries who are not EU Members
data <- data %>%
filter(`EU member` == 1) %>%
mutate(Allocations_GDP_Percent = (`Total bilateral allocations($ billion)` / `GDP in 2021($ billion)`) * 100) %>%
mutate(Commitments_GDP_Percent = (`Total bilateral commitments($ billion)` / `GDP in 2021($ billion)`) * 100)
plot <- ggplot(data, aes(x = Country,
y = Allocations_GDP_Percent)) +
geom_bar(stat = "identity",
fill = "navy") +
labs(title = "Total Allocations as a Proportion of GDP",
x = "Country",
y = "Percentage of GDP") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1)) +
theme(panel.border = element_rect(color = "black", fill = NA, size = 1))
plot
# Filtering out Estonia and Malta...
data <- data %>%
filter(!Country %in% c("Estonia", "Malta"))
# Now plotting it using my double_bar_plotter function...
compare_plot <- double_bar_plotter(data)
compare_plot
# Just a small bit of wrangling...
# ... by joining the data sets by "country" and "EU member" columns so that I only have to work with one data set...
data <- inner_join(alloc, commit, by = c("Country", "EU member"))
# ... and then filtering out countries who are not EU Members
data <- data %>%
filter(`EU member` == 1) %>%
mutate(Allocations_GDP_Percent = (`Total bilateral allocations($ billion)` / `GDP in 2021($ billion)`) * 100) %>%
mutate(Commitments_GDP_Percent = (`Total bilateral commitments($ billion)` / `GDP in 2021($ billion)`) * 100)
plot <- ggplot(data, aes(x = Country,
y = Allocations_GDP_Percent)) +
geom_bar(stat = "identity",
fill = "navy") +
labs(title = "Total Allocations as a Proportion of GDP",
x = "Country",
y = "Percentage of GDP") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1)) +
theme(panel.border = element_rect(color = "black", fill = NA, size = 1))
plot
# Filtering out Estonia and Malta...
data <- data %>%
filter(!Country %in% c("Estonia", "Malta"))
# Now plotting it using my double_bar_plotter function...
compare_plot <- double_bar_plotter(data)
compare_plot
# Filtering out Estonia and Malta...
data <- data %>%
filter(!Country %in% c("Estonia", "Malta"))
# Now plotting it using my double_bar_plotter function...
data_long <- data %>%
pivot_longer(cols = c(Allocations_GDP_Percent, Commitments_GDP_Percent),
names_to = "Compare",
values_to = "Percent")
# Plotting with ggplot
ggplot(data_long, aes(x = Country,
y = Percent,
fill = Compare,
color = Compare)) +
geom_bar(stat = "identity",
position = "dodge",
width = 1,
color = "black") +  # Add black border around bars
labs(title = "Allocations vs Commitments by Country",
x = "Country",
y = "Percent") +
scale_fill_manual(values = c("Allocations_GDP_Percent" = "navy",
"Commitments_GDP_Percent" = "orange"),
name = "Category") +
scale_color_manual(values = c("Allocations_GDP_Percent" = "navy",
"Commitments_GDP_Percent" = "orange"),
name = "Category") +  # Matching color scale for border
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top",  # Move legend to the top
legend.title = element_blank(),  # Remove legend title
legend.spacing.x = unit(0.2, "cm"),  # Increase horizontal spacing between legend items
panel.border = element_rect(color = "black", fill = NA, size = 1))
# Just a small bit of wrangling...
# ... by joining the data sets by "country" and "EU member" columns so that I only have to work with one data set...
data <- inner_join(alloc, commit, by = c("Country", "EU member"))
# ... and then filtering out countries who are not EU Members
data <- data %>%
filter(`EU member` == 1) %>%
mutate(Allocations_GDP_Percent = (`Total bilateral allocations($ billion)` / `GDP in 2021($ billion)`) * 100) %>%
mutate(Commitments_GDP_Percent = (`Total bilateral commitments($ billion)` / `GDP in 2021($ billion)`) * 100)
# Filtering out Estonia and Malta...
data <- data %>%
filter(!Country %in% c("Estonia", "Malta"))
# Now plotting it using my double_bar_plotter function...
compare_plot <- double_bar_plotter(data)
compare_plot
data_long <- data %>%
pivot_longer(cols = c(Allocations_GDP_Percent, Commitments_GDP_Percent),
names_to = "Compare",
values_to = "Percent")
# Plotting with ggplot
ggplot(data_long, aes(x = Country,
y = Percent,
fill = Compare,
color = Compare)) +
geom_bar(stat = "identity",
position = "dodge",
width = 1,
color = "black") +  # Add black border around bars
labs(title = "Allocations vs Commitments by Country",
x = "Country",
y = "Percent") +
scale_fill_manual(values = c("Allocations_GDP_Percent" = "navy",
"Commitments_GDP_Percent" = "orange"),
name = "Category") +
scale_color_manual(values = c("Allocations_GDP_Percent" = "navy",
"Commitments_GDP_Percent" = "orange"),
name = "Category") +  # Matching color scale for border
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top",  # Move legend to the top
legend.title = element_blank(),  # Remove legend title
legend.spacing.x = unit(0.2, "cm"),  # Increase horizontal spacing between legend items
panel.border = element_rect(color = "black", fill = NA, size = 1))
rm(list = ls())
gc()
library(tidyverse)
library(readr)
list.files('code/', full.names = T, recursive = T) %>% .[grepl('.R', .)] %>% as.list() %>% walk(~source(.))
alloc <- read_csv("data/Financial Allocations.csv")
commit <- read_csv("data/Financial Commitments.csv")
# Just a small bit of wrangling...
# ... by joining the data sets by "country" and "EU member" columns so that I only have to work with one data set...
data <- inner_join(alloc, commit, by = c("Country", "EU member"))
# ... and then filtering out countries who are not EU Members
data <- data %>%
filter(`EU member` == 1) %>%
mutate(Allocations_GDP_Percent = (`Total bilateral allocations($ billion)` / `GDP in 2021($ billion)`) * 100) %>%
mutate(Commitments_GDP_Percent = (`Total bilateral commitments($ billion)` / `GDP in 2021($ billion)`) * 100)
# Filtering out Estonia and Malta...
data <- data %>%
filter(!Country %in% c("Estonia", "Malta"))
# Now plotting it using my double_bar_plotter function...
compare_plot <- double_bar_plotter(data)
compare_plot
rm(list = ls())
gc()
library(tidyverse)
library(readr)
list.files('code/', full.names = T, recursive = T) %>% .[grepl('.R', .)] %>% as.list() %>% walk(~source(.))
alloc <- read_csv("data/Financial Allocations.csv")
commit <- read_csv("data/Financial Commitments.csv")
# Just a small bit of wrangling...
# ... by joining the data sets by "country" and "EU member" columns so that I only have to work with one data set...
data <- inner_join(alloc, commit, by = c("Country", "EU member"))
# ... and then filtering out countries who are not EU Members
data <- data %>%
filter(`EU member` == 1) %>%
mutate(Allocations_GDP_Percent = (`Total bilateral allocations($ billion)` / `GDP in 2021($ billion)`) * 100) %>%
mutate(Commitments_GDP_Percent = (`Total bilateral commitments($ billion)` / `GDP in 2021($ billion)`) * 100)
# Filtering out Estonia and Malta...
data <- data %>%
filter(!Country %in% c("Estonia", "Malta"))
# Now plotting it using my double_bar_plotter function...
compare_plot <- double_bar_plotter(data)
compare_plot
rm(list = ls())
gc()
library(tidyverse)
library(readr)
list.files('code/', full.names = T, recursive = T) %>% .[grepl('.R', .)] %>% as.list() %>% walk(~source(.))
alloc <- read_csv("data/Financial Allocations.csv")
commit <- read_csv("data/Financial Commitments.csv")
# Just a small bit of wrangling...
# ... by joining the data sets by "country" and "EU member" columns so that I only have to work with one data set...
data <- inner_join(alloc, commit, by = c("Country", "EU member"))
# ... and then filtering out countries who are not EU Members
data <- data %>%
filter(`EU member` == 1) %>%
mutate(Allocations_GDP_Percent = (`Total bilateral allocations($ billion)` / `GDP in 2021($ billion)`) * 100) %>%
mutate(Commitments_GDP_Percent = (`Total bilateral commitments($ billion)` / `GDP in 2021($ billion)`) * 100)
plot <- ggplot(data, aes(x = Country,
y = Allocations_GDP_Percent)) +
geom_bar(stat = "identity",
fill = "navy") +
labs(title = "Total Allocations as a Proportion of GDP",
x = "Country",
y = "Percentage of GDP") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1)) +
theme(panel.border = element_rect(color = "black", fill = NA, size = 1))
plot
# Filtering out Estonia and Malta...
data <- data %>%
filter(!Country %in% c("Estonia", "Malta"))
# Now plotting it using my double_bar_plotter function...
compare_plot <- double_bar_plotter(data)
compare_plot
proportions <- allocation_proportions(data)
proportions
most <- data %>%
arrange(desc(Allocations_GDP_Percent)) %>%
head()
View(most)
View(most)
most <- data %>%
arrange(desc(Allocations_GDP_Percent)) %>%
head()
most <- most[, c(1, 17)]
View(most)
most <- data %>%
arrange(desc(Allocations_GDP_Percent)) %>%
head(5)
most <- most[, c(1, 17)]
View(most)
most <- data %>%
arrange(desc(Allocations_GDP_Percent)) %>%
head(5)
most <- as.table(most[, c(1, 17)])
most <- data %>%
arrange(desc(Allocations_GDP_Percent)) %>%
head(5)
most <- most[, c(1, 17)]
most <- huxtable::as_hux(most)
# Bulgaria is slavic
# Lativia ex USSR
# Czech is slavic
# Slovenia is slavic
View(most)
most <- data %>%
arrange(desc(Allocations_GDP_Percent)) %>%
head(5)
most <- most[, c(1, 17)]
most <- hux(
"Countries" = most$Country,
"Allocation" = most$Allocations_GDP_Percent,
"Relation" = c("Slavic", "Diplomatic", "Former USSR", "Slavic", "Slavic")
)
most <- data %>%
arrange(desc(Allocations_GDP_Percent)) %>%
head(5)
most <- data.frame(Countries = most$Country, most$Allocations_GDP_Percent, Relation = c("Slavic", "Diplomatic", "Former USSR", "Slavic", "Slavic"))
most <- hux(
"Countries" = most$Country,
"Allocation" = most$Allocations_GDP_Percent,
"Relation" = most$Relation)
most <- data %>%
arrange(desc(Allocations_GDP_Percent)) %>%
head(5)
most <- data.frame(Countries = most$Country, most$Allocations_GDP_Percent, Relation = c("Slavic", "Diplomatic", "Former USSR", "Slavic", "Slavic"))
library(huxtable)
most <- hux(
"Countries" = most$Country,
"Allocation" = most$Allocations_GDP_Percent,
"Relation" = most$Relation)
View(most)
most <- data %>%
arrange(desc(Allocations_GDP_Percent)) %>%
head(5)
most <- data.frame(Countries = most$Country, Allocation = most$Allocations_GDP_Percent, Relation = c("Slavic", "Diplomatic", "Former USSR", "Slavic", "Slavic"))
library(huxtable)
most <- hux(
"Countries" = most$Country,
"Allocation" = most$Allocations_GDP_Percent,
"Relation" = most$Relation)
most <- data %>%
arrange(desc(Allocations_GDP_Percent)) %>%
head(5)
most <- data.frame(Countries = most$Country, Allocation = most$Allocations_GDP_Percent, Relation = c("Slavic", "Diplomatic", "Former USSR", "Slavic", "Slavic"))
library(huxtable)
most <- hux(
"Countries" = most[,1],
"Allocation" = most[,2],
"Relation" = most[,3])
most_plot <- most_plot %>%
set_all_padding(4) %>%
set_outer_padding(0) %>%
set_number_format(2) %>%
set_bold(row = 1, col = everywhere) %>%
set_bottom_border(row = 1, col = everywhere) %>%
set_width(0.5) %>%
set_caption("Countries With Largest Relative Allocations")
most <- data %>%
arrange(desc(Allocations_GDP_Percent)) %>%
head(5)
most <- data.frame(Countries = most$Country, Allocation = most$Allocations_GDP_Percent, Relation = c("Slavic", "Diplomatic", "Former USSR", "Slavic", "Slavic"))
library(huxtable)
most <- hux(
"Countries" = most[,1],
"Allocation" = most[,2],
"Relation" = most[,3])
most_plot <- most %>%
set_all_padding(4) %>%
set_outer_padding(0) %>%
set_number_format(2) %>%
set_bold(row = 1, col = everywhere) %>%
set_bottom_border(row = 1, col = everywhere) %>%
set_width(0.5) %>%
set_caption("Countries With Largest Relative Allocations")
most_plot
rm(list = ls())
gc()
library(tidyverse)
library(readr)
list.files('code/', full.names = T, recursive = T) %>% .[grepl('.R', .)] %>% as.list() %>% walk(~source(.))
alloc <- read_csv("data/Financial Allocations.csv")
commit <- read_csv("data/Financial Commitments.csv")
# Just a small bit of wrangling...
# ... by joining the data sets by "country" and "EU member" columns so that I only have to work with one data set...
data <- inner_join(alloc, commit, by = c("Country", "EU member"))
# ... and then filtering out countries who are not EU Members
data <- data %>%
filter(`EU member` == 1) %>%
mutate(Allocations_GDP_Percent = (`Total bilateral allocations($ billion)` / `GDP in 2021($ billion)`) * 100) %>%
mutate(Commitments_GDP_Percent = (`Total bilateral commitments($ billion)` / `GDP in 2021($ billion)`) * 100)
plot <- ggplot(data, aes(x = Country,
y = Allocations_GDP_Percent)) +
geom_bar(stat = "identity",
fill = "navy") +
labs(title = "Total Allocations as a Proportion of GDP",
x = "Country",
y = "Percentage of GDP") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1)) +
theme(panel.border = element_rect(color = "black", fill = NA, size = 1))
plot
# Filtering out Estonia and Malta...
data <- data %>%
filter(!Country %in% c("Estonia", "Malta"))
# Now plotting it using my double_bar_plotter function...
compare_plot <- double_bar_plotter(data)
compare_plot
# Seeing how many EU members allocated as much or more than they commited versus how many fell short...
proportions <- allocation_proportions(data)
proportions
# Seeing which countries are the relative largest contributers using my "allocation_head" function...
allocation_head <- allocation_head(data)
allocation_head
rm(list = ls())
gc()
library(tidyverse)
library(readr)
list.files('code/', full.names = T, recursive = T) %>% .[grepl('.R', .)] %>% as.list() %>% walk(~source(.))
alloc <- read_csv("data/Financial Allocations.csv")
commit <- read_csv("data/Financial Commitments.csv")
# Just a small bit of wrangling...
# ... by joining the data sets by "country" and "EU member" columns so that I only have to work with one data set...
data <- inner_join(alloc, commit, by = c("Country", "EU member"))
# ... and then filtering out countries who are not EU Members
data <- data %>%
filter(`EU member` == 1) %>%
mutate(Allocations_GDP_Percent = (`Total bilateral allocations($ billion)` / `GDP in 2021($ billion)`) * 100) %>%
mutate(Commitments_GDP_Percent = (`Total bilateral commitments($ billion)` / `GDP in 2021($ billion)`) * 100)
plot <- ggplot(data, aes(x = Country,
y = Allocations_GDP_Percent)) +
geom_bar(stat = "identity",
fill = "navy") +
labs(title = "Total Allocations as a Proportion of GDP",
x = "Country",
y = "Percentage of GDP") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1)) +
theme(panel.border = element_rect(color = "black", fill = NA, size = 1))
plot
# Filtering out Estonia and Malta...
data <- data %>%
filter(!Country %in% c("Estonia", "Malta"))
# Now plotting it using my double_bar_plotter function...
compare_plot <- double_bar_plotter(data)
compare_plot
# Seeing how many EU members allocated as much or more than they commited versus how many fell short...
proportions <- allocation_proportions(data)
proportions
# Seeing which countries are the relative largest contributers using my "allocation_head" function...
allocation_head <- allocation_head(data)
allocation_head
rm(list = ls())
gc()
library(tidyverse)
library(readr)
list.files('code/', full.names = T, recursive = T) %>% .[grepl('.R', .)] %>% as.list() %>% walk(~source(.))
alloc <- read_csv("data/Financial Allocations.csv")
commit <- read_csv("data/Financial Commitments.csv")
# Just a small bit of wrangling...
# ... by joining the data sets by "country" and "EU member" columns so that I only have to work with one data set...
data <- inner_join(alloc, commit, by = c("Country", "EU member"))
# ... and then filtering out countries who are not EU Members
data <- data %>%
filter(`EU member` == 1) %>%
mutate(Allocations_GDP_Percent = (`Total bilateral allocations($ billion)` / `GDP in 2021($ billion)`) * 100) %>%
mutate(Commitments_GDP_Percent = (`Total bilateral commitments($ billion)` / `GDP in 2021($ billion)`) * 100)
plot <- ggplot(data, aes(x = Country,
y = Allocations_GDP_Percent)) +
geom_bar(stat = "identity",
fill = "navy") +
labs(title = "Total Allocations as a Proportion of GDP",
x = "Country",
y = "Percentage of GDP") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1)) +
theme(panel.border = element_rect(color = "black", fill = NA, size = 1))
plot
# Filtering out Estonia and Malta...
data <- data %>%
filter(!Country %in% c("Estonia", "Malta"))
# Now plotting it using my double_bar_plotter function...
compare_plot <- double_bar_plotter(data)
compare_plot
# Seeing how many EU members allocated as much or more than they commited versus how many fell short...
proportions <- allocation_proportions(data)
proportions
# Seeing which countries are the relative largest contributers using my "allocation_head" function...
allocation_head <- allocation_head(data)
allocation_head
# Seeing which countries are the relative largest contributers using my "allocation_head" function...
allocation_head <- allocation_head(data)
rm(list = ls())
gc()
library(tidyverse)
library(readr)
list.files('code/', full.names = T, recursive = T) %>% .[grepl('.R', .)] %>% as.list() %>% walk(~source(.))
alloc <- read_csv("data/Financial Allocations.csv")
commit <- read_csv("data/Financial Commitments.csv")
# Just a small bit of wrangling...
# ... by joining the data sets by "country" and "EU member" columns so that I only have to work with one data set...
data <- inner_join(alloc, commit, by = c("Country", "EU member"))
# ... and then filtering out countries who are not EU Members
data <- data %>%
filter(`EU member` == 1) %>%
mutate(Allocations_GDP_Percent = (`Total bilateral allocations($ billion)` / `GDP in 2021($ billion)`) * 100) %>%
mutate(Commitments_GDP_Percent = (`Total bilateral commitments($ billion)` / `GDP in 2021($ billion)`) * 100)
plot <- ggplot(data, aes(x = Country,
y = Allocations_GDP_Percent)) +
geom_bar(stat = "identity",
fill = "navy") +
labs(title = "Total Allocations as a Proportion of GDP",
x = "Country",
y = "Percentage of GDP") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1)) +
theme(panel.border = element_rect(color = "black", fill = NA, size = 1))
plot
# Filtering out Estonia and Malta...
data <- data %>%
filter(!Country %in% c("Estonia", "Malta"))
# Now plotting it using my double_bar_plotter function...
compare_plot <- double_bar_plotter(data)
compare_plot
# Seeing how many EU members allocated as much or more than they commited versus how many fell short...
proportions <- allocation_proportions(data)
proportions
# Seeing which countries are the relative largest contributers using my "allocation_head" function...
allocation_head <- allocation_head(data)
allocation_head
